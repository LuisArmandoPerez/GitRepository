



4.3) Para poder estar usando GitHub de manera fluida y sin inerrupciones de confirmación de identidad dónde pide tu nombre de usuario y constraseña, vamos a generar un archivo oculto donde se crea una contraseña local/publica qué conecta la temrinal con GitHub.

Abre la Terminal y escribe:

$ git init

$ git config --global user.name "Your Name" 

$ git config --global user.email "your@email.com"

$ git config user.name "Your Name" 

$ ssh-keygen (Esto te genera claves en el directorio `.ssh` en tu directorio hogar - fíjate en lo qué aparece entre paréntesis cuando escribes el código, eso lo deberás de copiar y pegar ahí mismol, pues te estará preguntando en qué archivo quieres guardar tu llave.-) Luego te pedirá una palabra de pase, solo presiona Enter, en seguida te aparecerá unletrero para qué la confirmes, solo vuleve a presionar Enter.

$ ssh-add ~/.ssh/id_rsa

$ xclip -sel clip < ~/.ssh/id_rsa.pub

Verifica qué se haya creado correctamente escribiendo:

$ ssh -T git@github.com

Si no está correctamente hecha, entra a:

https://help.github.com/articles/generating-ssh-keys/

y revisa en qué pudo fallar.

Una vez verificado esto entra a tu cuenta de GitHub.

Selecciona Settings, que está en a la parte superior derecha en el engrante, son los settings.

Selecciona SSH Keys.

Selecciona Add SSH key.

Ponle un título.

Ahora pega la clave qué traes en tu clipboard. (Es decir, solo dale click derehco, pegar)

Dale click en Add Key.

Ahora regresate a tu paǵina principal de GitHub.

Entr al repositorio qué quieres pushear sin que te pida tu contraseña.

Ahora, donde dice clonar selecciona SSH. Copia el URL.

Ve a la Terminal.

Abre el directorio de tu repo, es decir, escribe:

$ cd "a"    (a = nombre de tu repositorio)

$ cd .git

$ gedit config

Cambia el URL de -remote "origin"- por el que copiaste.

Regresa a tu GitHub.

Salvalo y cierralo.

Vuelve a la página de tu GitHUb y vuleve a cambiar SSH por HTTPS enla URL de tu repositorio.

Listo, ya no te pedirá la cuenta otra vez.
